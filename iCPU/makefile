#############################################################################
# Makefile for building iCPU
# Generated by tmake at 06:45, 2009/12/14
#     Project: iCPU
#    Template: app
#############################################################################

####### Compiler, tools and options

CC	=	arm-linux-gnueabi-gcc
CXX	=	arm-linux-gnueabi-g++
CFLAGS	=	-pipe -Wall -W -O3 -DNO_DEBUG
CXXFLAGS=	-pipe -DQWS -fno-exceptions -fno-rtti -Wall -W -O3 -DNO_DEBUG
INCPATH	=	-I$(QTDIR)/include
LINK	=	arm-linux-gnueabi-gcc
LFLAGS	=	-Wl,-rpath,$(QTDIR)/lib
LIBS	=	$(SUBLIBS) -L$(QTDIR)/lib -lm -lqte-mt -lezxappbase
MOC	=	$(QTDIR)/bin/moc
UIC	=	$(QTDIR)/bin/uic

TAR	=	tar -cf
GZIP	=	gzip -9f

####### Files

HEADERS =	icpu.h \
		myapp.h
SOURCES =	icpu.cpp \
		main.cpp \
		myapp.cpp
OBJECTS =	icpu.o \
		main.o \
		myapp.o
INTERFACES =	
UICDECLS =	
UICIMPLS =	
SRCMOC	=	moc_icpu.cpp \
		moc_myapp.cpp
OBJMOC	=	moc_icpu.o \
		moc_myapp.o
DIST	=	
TARGET	=	iCPU
INTERFACE_DECL_PATH = .

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules


all: $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

moc: $(SRCMOC)

tmake: makefile

makefile: iCPU.pro
	tmake iCPU.pro -o makefile

dist:
	$(TAR) iCPU.tar iCPU.pro $(SOURCES) $(HEADERS) $(INTERFACES) $(DIST)
	$(GZIP) iCPU.tar

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS) $(TARGET)
	-rm -f *~ core

####### Sub-libraries


###### Combined headers


####### Compile

icpu.o: icpu.cpp \
		icpu.h

main.o: main.cpp \
		myapp.h \
		icpu.h

myapp.o: myapp.cpp \
		myapp.h

moc_icpu.o: moc_icpu.cpp \
		icpu.h

moc_myapp.o: moc_myapp.cpp \
		myapp.h

moc_icpu.cpp: icpu.h
	$(MOC) icpu.h -o moc_icpu.cpp

moc_myapp.cpp: myapp.h
	$(MOC) myapp.h -o moc_myapp.cpp

